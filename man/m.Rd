% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m.R
\name{m}
\alias{m}
\title{Assemble string with interpolated values from R or Sympy}
\usage{
m(
  ...,
  sep = "",
  sep_middle = "\\n",
  before = NULL,
  sep_before = "\\n",
  after = NULL,
  sep_after = "\\n",
  sep_blocks = "\\n",
  use_cat = getOption("m_use_cat", FALSE)
)
}
\arguments{
\item{...}{Any number of strings (to be concatenated).}

\item{sep}{Separator between main strings (\code{...}).

If \code{...} is only one string, this has no effect.}

\item{sep_middle}{Separator between elements of the interpolated character vectors.

\emph{All} of the \code{{{...}}} fields in the strings in \code{...} \emph{must} generate vectors with equal length.

If all of the \code{{{...}}} fields generate vectors with length 1, \code{sep_middle} has no effect.

Otherwise, \code{sep_middle} will be inserted between the strings generated by the vector elements.}

\item{before}{Text to be emitted at the beginning. May NOT contain \code{{{...}}} fields.}

\item{sep_before}{Separator between elements of \code{before} (if \code{before} has  length > 1).}

\item{after}{Text to be emitted at the end. May NOT contain \code{{{...}}} fields.}

\item{sep_after}{Separator between elements of \code{after} (if \code{after} has length > 1).}

\item{sep_blocks}{Separator between \code{before}, \code{middle} and \code{after}.

If \code{before} and \code{after} are \code{NULL}, this has no effect.}

\item{use_cat}{If TRUE, output is generated with \code{\link[stringr]{str_c}}; in this case, the function must be called inside a chunk with \code{results='asis'}.

If FALSE, output is generated with \code{\link[knitr]{asis_output}}; in this case, \code{results='asis'} is not necessary.}
}
\value{
A character string after interpolation. I.e., a character vector of length 1 --- in R jargon, the output is \emph{collapsed}.

If \code{use_cat} is \code{FALSE}, this string has class \code{knit_asis}. See \code{\link[knitr]{asis_output}}.
}
\description{
This an extension of \code{\link[glue]{glue}}.

Its main objective is to assemble LaTeX strings to be included in RMarkdown documents rendered by the \code{\link[knitr:knitr]{knitr package}}. Other uses are possible (e.g., converting Sympy expressions to R syntax).

In the argument strings, expressions enclosed by \verb{\{\{} and \verb{\}\}} will be evaluated as Sympy (or optionally R) code. See \strong{Details} below.

Long strings may be broken by line and given as separate arguments; they will be concatenated together. Leading whitespace and blank lines from the first and last lines are automatically trimmed.
}
\details{
How interpolation works:

The strings in \code{...} may contain \emph{fields} of the form \verb{\{\{text\}\}.}

If \code{text} starts with a colon, different printers are invoked for this field, depending on the character following the colon:
\itemize{
\item \verb{:l }: use LaTeX printer on the Sympy expression denoted by the rest of the field. This is also the default behavior, when \code{text} does not begin with a colon.
\item \verb{:r }: use R printer on the Sympy expression denoted by the rest of the field.
\item \verb{:g }: use \emph{original glue behavior} --- interpolation uses R environment --- on the R expression denoted by the rest of the field.
}
}
\author{
fnaufel
}
